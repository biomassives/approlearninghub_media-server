# docker-compose.yml - Fixed Configuration

services:
  # MongoDB Database
  my-mongo-db-local:
    image: mongo:4.4
    container_name: appro-mongo-local
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secure_password_here
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - appro-network

  # Parse Server
  my-parse-server-local:
    image: parseplatform/parse-server:latest
    container_name: appro-parse-server
    restart: unless-stopped
    environment:
      PARSE_SERVER_APPLICATION_ID: JfMeozLs8UZFxaZibAiZhlpDl5OZkyjVwzdxLfqw
      PARSE_SERVER_MASTER_KEY: your_master_key_here_make_it_secure
      PARSE_SERVER_DATABASE_URI: mongodb://admin:secure_password_here@my-mongo-db-local:27017/parse?authSource=admin
      PARSE_SERVER_URL: http://localhost:1338/parse
      PARSE_SERVER_MOUNT_PATH: /parse
      PARSE_SERVER_ALLOW_ORIGIN: '*'
      PARSE_SERVER_ENABLE_ANON_USERS: 'true'
      PARSE_SERVER_ENABLE_CLIENT_SSL: 'false'
      PARSE_SERVER_LOG_LEVEL: info
    ports:
      - "1338:1337"
    depends_on:
      - my-mongo-db-local
    volumes:
      - ./parse-cloud:/parse-server/cloud
    networks:
      - appro-network

  # Parse Dashboard
  parse-dashboard:
    image: parseplatform/parse-dashboard:latest
    container_name: appro-parse-dashboard
    restart: unless-stopped
    environment:
      PARSE_DASHBOARD_SERVER_URL: http://my-parse-server-local:1337/parse
      PARSE_DASHBOARD_MASTER_KEY: your_master_key_here_make_it_secure
      PARSE_DASHBOARD_APP_ID: JfMeozLs8UZFxaZibAiZhlpDl5OZkyjVwzdxLfqw
      PARSE_DASHBOARD_APP_NAME: "ApproVideo Hub"
      PARSE_DASHBOARD_USER_ID: admin
      PARSE_DASHBOARD_USER_PASSWORD: admin_password_here
      PARSE_DASHBOARD_ALLOW_INSECURE_HTTP: 'true'
    ports:
      - "4040:4040"
    depends_on:
      - my-parse-server-local
    networks:
      - appro-network

  # MediaGoblin (Fixed configuration)
  mediagoblin:
    image: mediagoblin/mediagoblin:0.14.0
    container_name: appro-mediagoblin
    restart: unless-stopped
    environment:
      MEDIAGOBLIN_DATABASE_URI: postgresql://mediagoblin:mediagoblin_pass@postgres:5432/mediagoblin
    volumes:
      - mediagoblin_data:/var/lib/mediagoblin
    ports:
      - "6543:6543"
    depends_on:
      - postgres
    networks:
      - appro-network

  # PostgreSQL for MediaGoblin
  postgres:
    image: postgres:13
    container_name: appro-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mediagoblin
      POSTGRES_USER: mediagoblin
      POSTGRES_PASSWORD: mediagoblin_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - appro-network

  # Nginx Frontend (Simplified - no SSL issues)
  hub-frontend:
    image: nginx:alpine
    container_name: appro-hub-frontend
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./html:/usr/share/nginx/html:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - my-parse-server-local
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.hub.rule=Host(`hub.approvideo.org`)"
      - "traefik.http.routers.hub.entrypoints=web"
      - "traefik.http.services.hub.loadbalancer.server.port=80"
    networks:
      - appro-network


  # Caddy (Alternative to complex Traefik setup)
  my-caddy-local:
    image: caddy:alpine
    container_name: appro-caddy
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./html:/usr/share/caddy:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - appro-network

  # Etherpad (Optional)
  etherpad:
    image: etherpad/etherpad:latest
    container_name: appro-etherpad
    restart: unless-stopped
    environment:
      DB_TYPE: mysql
      DB_HOST: etherpad-mysql
      DB_PORT: 3306
      DB_NAME: etherpad
      DB_USER: etherpad
      DB_PASS: etherpad_password
    ports:
      - "9001:9001"
    depends_on:
      - etherpad-mysql
    networks:
      - appro-network

  # MySQL for Etherpad
  etherpad-mysql:
    image: mysql:8.0
    container_name: appro-etherpad-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: etherpad
      MYSQL_USER: etherpad
      MYSQL_PASSWORD: etherpad_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - etherpad_mysql_data:/var/lib/mysql
    networks:
      - appro-network

volumes:
  mongo_data:
  postgres_data:
  mediagoblin_data:
  caddy_data:
  caddy_config:
  etherpad_mysql_data:

networks:
  appro-network:
    driver: bridge
